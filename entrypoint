#!/bin/bash

set -euo pipefail
IFS=$'\n\t'

export TERM=xterm
bold=$(tput setaf 003)
normal=$(tput sgr0)

print() {
    echo "${bold}$1${normal}"
}

# Update the version if it was passed
export VERSION="${VERSION:-${INPUT_VERSION}}"
if [[ -n "${VERSION}" ]]; then
    print "Updating package version to $VERSION..."
    npm version "${VERSION}" --allow-same-version --no-git-tag-version
fi

# Build the packages
print "Installing dependencies..."
npm install

print "Building source..."
npm run build

print "Building packages..."
rm -rf dist/*
npm run package

# Publish to npm if token is present
export NPM_TOKEN="${NPM_TOKEN:-${INPUT_NPM_TOKEN}}"
if [[ -n "${NPM_TOKEN}" ]]; then
    print "Publishing npm package..."
    # shellcheck disable=SC2016
    echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > .npmrc
    npm publish dist/js/*
fi

# Publish to PyPI if token is present
export PYPI_TOKEN="${PYPI_TOKEN:-${INPUT_PYPI_TOKEN}}"
if [[ -n "${PYPI_TOKEN}" ]]; then
    print "Publishing PyPI package..."
    cat <<EOF > ~/.pypirc
[pypi]
username = __token__
password = ${PYPI_TOKEN}
EOF
    twine upload dist/python/*
fi
